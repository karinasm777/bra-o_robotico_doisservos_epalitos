// ------------------------------------------------------------
// Canal de YouTube: RobotUNOs
// Projeto: Grua (guindaste) com servomotores
// ------------------------------------------------------------
// Este programa controla dois servomotores usando dois potenciômetros.
// Cada potenciômetro atua como uma alavanca de controle: girar o potenciômetro
// faz o servo girar lentamente para um lado ou para o outro.
//
// Assim, simulamos o controle manual de uma grua,
// onde cada eixo (base e braço, por exemplo) é movido separadamente.
//
// ------------------------------------------------------------

// Incluímos a biblioteca padrão de servos do Arduino.
// Ela permite controlar a posição de um servomotor facilmente,
// sem precisar gerar manualmente os pulsos de controle (PWM).
#include <Servo.h>

// Criamos dois objetos "Servo", que representam cada motor.
Servo servo1; // Servo responsável por um dos eixos (por exemplo, a base)
Servo servo2; // Servo responsável por outro eixo (por exemplo, o braço da grua)

// Variáveis que guardam a posição atual de cada servo em graus (0 a 180).
// Começamos ambos em 90 graus (posição central).
int eixo1 = 90;
int eixo2 = 90;

void setup() {
  // Ligamos (associamos) os servos aos pinos digitais escolhidos.
  // Esses pinos enviam o sinal de controle PWM que define o ângulo do servo.
  servo1.attach(7); // o servo1 recebe comandos pelo pino digital 7
  servo2.attach(6); // o servo2 recebe comandos pelo pino digital 6

  // Definimos a posição inicial de ambos os servos.
  servo1.write(90); // centraliza o servo1
  servo2.write(90); // centraliza o servo2
}

void loop() {
  // ============================================================
  // CONTROLE DO SERVO 1 — eixo1 (potenciômetro no pino A0)
  // ============================================================

  // O potenciômetro funciona como um divisor de tensão.
  // A leitura analógica (0 a 1023) indica sua posição.
  int leitura1 = analogRead(A0); // lê o valor do potenciômetro 1

  // Se o potenciômetro estiver girado para um lado (valor < 200),
  // queremos mover o servo levemente no sentido "horário".
  if (leitura1 < 200 && eixo1 < 180) {
    eixo1++;              // aumenta o ângulo (move 1 grau para frente)
    servo1.write(eixo1);  // envia o novo ângulo para o servo
  }

  // Se o potenciômetro estiver girado para o outro lado (valor > 700),
  // movemos o servo no sentido "anti-horário".
  if (leitura1 > 700 && eixo1 > 0) {
    eixo1--;              // diminui o ângulo (1 grau para trás)
    servo1.write(eixo1);  // atualiza o servo
  }

  // ============================================================
  // CONTROLE DO SERVO 2 — eixo2 (potenciômetro no pino A1)
  // ============================================================

  // O mesmo raciocínio vale para o segundo servo e potenciômetro:
  int leitura2 = analogRead(A1); // lê o valor do potenciômetro 2

  if (leitura2 < 200 && eixo2 < 180) {
    eixo2++;
    servo2.write(eixo2);
  }

  if (leitura2 > 700 && eixo2 > 0) {
    eixo2--;
    servo2.write(eixo2);
  }

  // ------------------------------------------------------------
  // Pequeno atraso para:
  // 1. Evitar movimentos muito bruscos (suaviza a resposta)
  // 2. Impedir leituras muito rápidas que fariam o servo "vibrar"
  // ------------------------------------------------------------
  delay(15);
}
